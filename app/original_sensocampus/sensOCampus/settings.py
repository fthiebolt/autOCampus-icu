"""
Django settings for sensOCampus project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
#
#
# Thiebolt F.   [oct.17] added django_extension within installed app
#


# #############################################################################
#
# IMPORT ZONE
#
import os



# #############################################################################
#
# GLOBAL VARIABLES

# SECURITY WARNING: don't run with debug turned on in production!
#
#DEBUG = True


# DEVELOPMENT MODE for DB: sqlite, local(previ2 postgres), otherwise the real neOCampus DB
# DEVELOPMENT MODE for MQTT: DEVEL==True --> local MQTT broker, otherwise the real neOCampus MQTT broker
#DEVEL = True

#if DEVEL==True, choose either sqlite or local database (i.e previ2 postgresdb in Amilab infrastructure)
#DEVEL_DB = "sqlite"
DEVEL_DB = "local"


#######################################################################

LOGIN_PREFIX = 'senso_'
TOPIC_PREFIX = ''

LOGS_FORMAT = '[%(asctime)s][%(module)s:%(funcName)s:%(lineno)d][%(levelname)s] %(message)s'

#######################################################################

# MQTT settings

if locals().get("DEVEL",False) != True:
    # neOCampus MQTT broker
    MQTT_HOST = 'neocampus.univ-tlse3.fr'
    MQTT_PORT = 1883
    MQTT_LOGIN = 'sensocampus'
    MQTT_PASSWORD = 'XXXXXXXXXXXXXXX'
    MQTT_KEEPALIVE = 60
    MQTT_CLIENT_ID = 'paho_sensocampus-main01'
else:
    # [DEVEL] local MQTT broker
    MQTT_HOST = 'previ2'
    MQTT_PORT = 1883
    MQTT_LOGIN = ''
    MQTT_PASSWORD = ''
    MQTT_KEEPALIVE = 60
    MQTT_CLIENT_ID = 'sensocampus-beta01'


#######################################################################

# Celery settings
BROKER_URL = 'redis://'
CELERY_RESULT_BACKEND = 'redis://'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

#######################################################################

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'

ALLOWED_HOSTS = ['XXXXXXX', ]

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'

# Auto loggout after 2 hours
SESSION_COOKIE_AGE = 7200

# Auto loggout on browser close
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# append slash to end of url (default)
APPEND_SLASH = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'devices',
    'mqtt_auth',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sensOCampus.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sensOCampus.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

if locals().get("DEVEL",False) != True:
    # neOCampus database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'sensocampus',
            'USER': 'sensocampus',
            'PASSWORD': 'XXXXXXXXXXXXXXXXXXXX',
            'HOST': 'neocampus.univ-tlse3.fr',
            'PORT': '5432',
            'CONN_MAX_AGE': 120,
        }
    }
elif locals().get("DEVEL_DB","sqlite").lower() == "local":
    # locale database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'sensocampus',
            'USER': 'sensocampus',
            'PASSWORD': 'XXXXXXXXXXXXXXXXXXXX',
            'HOST': 'previ2',
            'PORT': '5432',
            'CONN_MAX_AGE': 120,
        }
    }
else:
    # sqlite database (file)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3')
        }
    }

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
